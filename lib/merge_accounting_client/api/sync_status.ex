# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule MergeAccountingClient.Api.SyncStatus do
  @moduledoc """
  API calls for all endpoints tagged `SyncStatus`.
  """

  alias MergeAccountingClient.Connection
  import MergeAccountingClient.RequestBuilder

  @doc """
  Get syncing status. Possible values: `DISABLED`, `DONE`, `FAILED`, `SYNCING`

  ## Parameters

  - connection (MergeAccountingClient.Connection): Connection to server
  - authorization (String.t): Should include 'Bearer ' followed by your test/production API Key.
  - x_account_token (String.t): Token identifying the end user.
  - opts (KeywordList): [optional] Optional parameters
    - :cursor (String.t): The pagination cursor value.
    - :page_size (integer()): Number of results to return per page.
  ## Returns

  {:ok, MergeAccountingClient.Model.PaginatedSyncStatusList.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec sync_status_list(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, MergeAccountingClient.Model.PaginatedSyncStatusList.t()} | {:error, Tesla.Env.t()}
  def sync_status_list(connection, authorization, x_account_token, opts \\ []) do
    optional_params = %{
      :cursor => :query,
      :page_size => :query
    }

    %{}
    |> method(:get)
    |> url("/sync-status")
    |> add_param(:headers, :Authorization, authorization)
    |> add_param(:headers, :"X-Account-Token", x_account_token)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      {200, %MergeAccountingClient.Model.PaginatedSyncStatusList{}}
    ])
  end
end
