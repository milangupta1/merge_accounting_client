# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule MergeAccountingClient.Model.AccountDetailsAndActions do
  @moduledoc """
  # The LinkedAccount Object ### Description The `LinkedAccount` object is used to represent an end user's link with a specific integration.  ### Usage Example View a list of your organization's `LinkedAccount` objects.
  """

  @derive [Poison.Encoder]
  defstruct [
    :id,
    :category,
    :status,
    :status_detail,
    :end_user_origin_id,
    :end_user_organization_name,
    :end_user_email_address,
    :webhook_listener_url,
    :integration
  ]

  @type t :: %__MODULE__{
          :id => String.t(),
          :category => CategoryEnum | nil,
          :status => AccountDetailsAndActionsStatusEnum,
          :status_detail => String.t() | nil,
          :end_user_origin_id => String.t() | nil,
          :end_user_organization_name => String.t(),
          :end_user_email_address => String.t(),
          :webhook_listener_url => String.t(),
          :integration =>
            MergeAccountingClient.Model.AccountDetailsAndActionsIntegration.t() | nil
        }
end

defimpl Poison.Decoder, for: MergeAccountingClient.Model.AccountDetailsAndActions do
  import MergeAccountingClient.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:category, :struct, MergeAccountingClient.Model.CategoryEnum, options)
    |> deserialize(
      :status,
      :struct,
      MergeAccountingClient.Model.AccountDetailsAndActionsStatusEnum,
      options
    )
    |> deserialize(
      :integration,
      :struct,
      MergeAccountingClient.Model.AccountDetailsAndActionsIntegration,
      options
    )
  end
end
